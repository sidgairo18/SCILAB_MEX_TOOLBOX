<?xml version="1.0" encoding="UTF-8"?>
<!--
* Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
* Copyright (C) 2018 - 2018 - Scilab Enterprises
* Copyright (C) 2018-2018 - Siddhartha Gairola GSoC 2018
*
* This file is hereby licensed under the terms of the GNU GPL v2.0,
* pursuant to article 5.3.4 of the CeCILL v.2.1.
* This file was originally licensed under the terms of the CeCILL v2.1,
* and continues to be available under such terms.
* For more information, see the COPYING file which you should have received
* along with this program.
*
-->
<refentry xml:id="self_intersect" xml:lang="en"
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:svg="http://www.w3.org/2000/svg"
    xmlns:ns5="http://www.w3.org/1999/xhtml"
    xmlns:mml="http://www.w3.org/1998/Math/MathML"
    xmlns:db="http://docbook.org/ns/docbook">
    <info>
        <pubdate>$LastChangedDate$</pubdate>
    </info>

    <refnamediv>
        <refname>Self Intersect</refname>

        <refpurpose>
             SELFINTERSECT Given a triangle mesh (V,F) compute a new mesh (VV,FF) which is the same as (V,F) except that any self-intersecting triangles in (V,F) have been subdivided (new vertices and face created) so that the self-intersection contour lies exactly on edges in (VV,FF). More details under Description Section.
        </refpurpose>
    </refnamediv>

    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            [VV,FF,IF] = selfintersect(V,F,'ParameterName',ParameterValue, ...)
        </synopsis>
    </refsynopsisdiv>

    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>V</term>
                <listitem>
                    <para>#V by 3 list of vertex positions</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>F</term>
                <listitem>
                    <para>#F by 3 list of triangle indices into V</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>

    <refsection>
        <title>Optional</title>
        <variablelist>
            <varlistentry>
                <term>'DetectOnly'</term>
                <listitem>
                    <para>'DetectOnly' followed by bool. Whether to only detect intersecting pairs (sets IF but not VV or FF) {false}</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>'FirstOnly'</term>
                <listitem>
                    <para>'FirstOnly' followed by bool whether to only detect the first intersection. {false}</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>'StitchAll'</term>
                <listitem>
                    <para>'StitchAll' followed by whether to stitch all vertices in the output, if true then IM will be 1:size(VV,1) {false}</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>

    <refsection>
        <title>Output</title>
        <variablelist>
            <varlistentry>
                <term>VV</term>
                <listitem>
                    <para>#VV by 3 list of vertex positions</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>FF</term>
                <listitem>
                    <para>#FF by 3 list of triangle indices into V</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>IF</term>
                <listitem>
                    <para>#intersecting face pairs by 2  list of intersecting face pairs, indexing F</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>J</term>
                <listitem>
                    <para>#FF list of indices into F of birth parents</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>IM</term>
                <listitem>
                    <para>#VV list of indices into VV of unique vertices</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>

    <refsection>
        <title>Description></title>
        <para>SELFINTERSECT Given a triangle mesh (V,F) compute a new mesh (VV,FF) which is the same as (V,F) except that any self-intersecting triangles in (V,F) have been subdivided (new vertices and face created) so that the self-intersection contour lies exactly on edges in (VV,FF). More details under Description Section. New vertices on edges are "merged" only across original faces sharing that edge. This means that if the input triangle mesh is a closed manifold the output will be too.</para>
    </refsection>

    <refsection>
        <title>Examples</title>      
        <para>Example showing the use of Self Intersect.</para>
        <programlisting><![CDATA[
            [SV,SF,~,~,IM] = selfintersect(V,F);
            FF = IM(SF);
            [U,IM] = remove_unreferenced(SV,FF);
            G = IM(FF);
            // Self-Intersect (V,F)+(U,G) and separate
            VU = [V;U];
            FG = [F;size(V,1)+G];
            [SVU,SFG,~,J] = selfintersect(VU,FG);
            SF = SFG(J<=size(F,1),:);
            SG = SFG(J>size(F,1),:);
            [SV,IM] = remove_unreferenced(SVU,SF);
            SF = IM(SF);
            [SU,IM] = remove_unreferenced(SVU,SG);
            SG = IM(SG);
            ]]></programlisting>
    </refsection>

    <refsection role="see also">
        <title>See also</title>

        <simplelist type="inline">
            <member>
                <ulink url="https://github.com/alecjacobson/gptoolbox">Geometry Processing Toolbox</ulink>
            </member>
            <member>
                <link linkend="geoemtry_processing_toolbox">Geometry_Processing_Toolbox</link>
            </member>
        </simplelist>
    </refsection>
    
</refentry>
